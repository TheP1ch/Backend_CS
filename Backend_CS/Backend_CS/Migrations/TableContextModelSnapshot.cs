// <auto-generated />
using System;
using Backend_CS.assets;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_CS.Migrations
{
    [DbContext(typeof(TableContext))]
    partial class TableContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Backend_CS.Models.Request", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("requestDataId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("workGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("requestDataId");

                    b.HasIndex("workGroupId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Backend_CS.Models.RequestData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkGroupid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("lastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("priorityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statusNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statusPosition")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("WorkGroupid");

                    b.ToTable("requestDatas");
                });

            modelBuilder.Entity("Backend_CS.Models.WorkGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("Backend_CS.Models.Worker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imgUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("Backend_CS.Models.Request", b =>
                {
                    b.HasOne("Backend_CS.Models.RequestData", "requestData")
                        .WithMany()
                        .HasForeignKey("requestDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_CS.Models.WorkGroup", "workGroup")
                        .WithMany()
                        .HasForeignKey("workGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("requestData");

                    b.Navigation("workGroup");
                });

            modelBuilder.Entity("Backend_CS.Models.RequestData", b =>
                {
                    b.HasOne("Backend_CS.Models.WorkGroup", null)
                        .WithMany("requestsData")
                        .HasForeignKey("WorkGroupid");
                });

            modelBuilder.Entity("Backend_CS.Models.WorkGroup", b =>
                {
                    b.Navigation("requestsData");
                });
#pragma warning restore 612, 618
        }
    }
}
